// Импортируем все необходимые библиотеки:
#define UNUSED(x) (void)(x)
#ifdef DEBUG
#include <iostream>
#endif
#include <freeglut.h>

// Объявляем все глобальные переменные:
GLfloat xrot = 0.0; // Величина вращения по оси x
GLfloat yrot = 0.0; // Величина вращения по оси y

// Первые три числа цвет в формате RGB, а последнее - яркость
GLfloat ambient[] = {1.0, 1.0, 1.0, 1};      // рассеянное освещение
GLfloat greencolor[] = {0.2, 0.8, 0.0, 0.8}; // Цвет елочных иголок
GLfloat treecolor[] = {0.9, 0.6, 0.3, 0.8};  // Цвет елочного стебля
GLfloat lightpos[] = {1.0, 1.0, 1.0};        // Положение источника освещения

void init()
{
    // Серый цвет для первоначальной закраски
    glClearColor(0.5, 0.5, 0.5, 1.0);
    // Определяем границы рисования по горизонтали и вертикали
    gluOrtho2D(-1.0, 1.0, -1.0, 1.0);
    // Сместимся по оси Х на 90 градусов
    glRotatef(-90, 1.0, 0.0, 0.0);
    // Определяем текущую модель освещения
    glLightModelfv(GL_LIGHT_MODEL_AMBIENT, ambient);
    glEnable(GL_LIGHTING); // Включаем освещение
    // Включаем один источник света
    glEnable(GL_LIGHT0);
    // Определяем положение источника света
    glLightfv(GL_LIGHT0, GL_POSITION, lightpos);
}

void specialkeys(int key, int x, int y)
{
    UNUSED(x);
    UNUSED(y);
    
    // Обработчики для клавиш со стрелками
    if (key == GLUT_KEY_UP)    // Клавиша вверх
        xrot -= 2.0;           // Уменьшаем угол вращения по оси Х
    if (key == GLUT_KEY_DOWN)  // Клавиша вниз
        xrot += 2.0;           // Увеличиваем угол вращения по оси Х
    if (key == GLUT_KEY_LEFT)  // Клавиша влево
        yrot -= 2.0;           // Уменьшаем угол вращения по оси Y
    if (key == GLUT_KEY_RIGHT) // Клавиша вправо
        yrot += 2.0;           // Увеличиваем угол вращения по оси Y

    glutPostRedisplay(); // Вызываем процедуру перерисовки
}

void draw()
{
    // Очищаем экран и заливаем серым цветом
    glClear(GL_COLOR_BUFFER_BIT);
    // Сохраняем текущее положение "камеры"
    glPushMatrix();
    // Вращаем по оси X на величину xrot
    glRotatef(xrot, 1.0, 0.0, 0.0);
    // Вращаем по оси Y на величину yrot
    glRotatef(yrot, 0.0, 1.0, 0.0);
    // Источник света вращаем вместе с елкой
    glLightfv(GL_LIGHT0, GL_POSITION, lightpos);

    // Рисуем ствол елки
    // Устанавливаем материал: рисовать с 2 сторон, рассеянное освещение, коричневый цвет
    glMaterialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, treecolor);
    // Сдвинемся по оси Z на -0.7
    glTranslatef(0.0, 0.0, -0.7);
    // Рисуем цилиндр с радиусом 0.1, высотой 0.2
    // Последние два числа определяют количество полигонов
    glutSolidCylinder(0.1, 0.2, 20, 20);
    // Рисуем ветки елки
    // Устанавливаем материал: рисовать с 2 сторон, рассеянное освещение, зеленый цвет
    glMaterialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, greencolor);
    // Сдвинемся по оси Z на 0.2
    glTranslatef(0.0, 0.0, 0.2);
    // Рисуем нижние ветки (конус) с радиусом 0.5, высотой 0.5
    // Последние два числа определяют количество полигонов
    glutSolidCone(0.5, 0.5, 20, 20);
    // Сдвинемся по оси Z на -0.3
    glTranslatef(0.0, 0.0, 0.3);
    // Конус с радиусом 0.4, высотой 0.4
    glutSolidCone(0.4, 0.4, 20, 20);
    // Сдвинемся по оси Z на -0.3
    glTranslatef(0.0, 0.0, 0.3);
    // Конус с радиусом 0.3, высотой 0.3
    glutSolidCone(0.3, 0.3, 20, 20);

    // Возвращаем сохраненное положение "камеры"
    glPopMatrix();
    // Выводим все нарисованное в памяти на экран
    glutSwapBuffers();
}

int main(int argc, char **argv)
{
    // Здесь начинается выполнение программы
    // Использовать двойную буферизацию и цвета в формате RGB (Красный, Зеленый, Синий)
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    // Указываем начальный размер окна (ширина, высота)
    glutInitWindowSize(300, 300);
    // Указываем начальное положение окна относительно левого верхнего угла экрана
    glutInitWindowPosition(50, 50);
    // Инициализация OpenGl
    glutInit(&argc, argv);
    // Создаем окно с заголовком "Happy New Year!"
    glutCreateWindow("Happy New Year!");
    // Определяем процедуру, отвечающую за перерисовку
    glutDisplayFunc(draw);
    // Определяем процедуру, отвечающую за обработку клавиш
    glutSpecialFunc(specialkeys);
    // Вызываем нашу функцию инициализации
    init();
    // Запускаем основной цикл
    glutMainLoop();
}